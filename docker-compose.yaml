services:
  reverse-proxy:
    image: nginx:latest
    ports:
      - "80:80"
    volumes:
      - ./reverse_proxy/nginx.conf:/etc/nginx/nginx.conf
    depends_on:
      - frontend
      - backend
  frontend:
    build: ./client
    command: npm start
    volumes:
      - ./client:/app      # Mount source code
      - /app/node_modules  # Prevent overwriting node_modules
    environment:
      - HOST=0.0.0.0
      - PORT=8080
    expose:
      - "8080"
    depends_on:
      - backend

  backend:
    build: ./server
    command: npm run dev # with nodemon
    volumes:
      - ./server:/app      # Mount source code
      - /app/node_modules  # Prevent overwriting node_modules
    expose:
      - "8888"
    environment:
      - DB_HOST=${DB_HOST}
      - DB_USER=${DB_USER}
      - DB_PASS=${DB_PASSWORD}
      - DB_NAME=${DB_NAME}
      - STRIPE_SECRET_KEY=${STRIPE_SECRET_KEY}
      - MAIL_USER=${MAIL_USER}
      - MAIL_PASS=${MAIL_PASS}
      - MAIL_SERVICE=${MAIL_SERVICE}
    depends_on:
      - db

  db:
    image: mysql:8.0
    restart: always
    environment:
      - MYSQL_ROOT_PASSWORD=${DB_ROOT_PASSWORD}
      - MYSQL_USER=${DB_USER}
      - MYSQL_PASSWORD=${DB_PASSWORD}
      - MYSQL_DATABASE=${DB_NAME}
    volumes:
      - ./db/init:/docker-entrypoint-initdb.d
      - db_data:/var/lib/mysql
    expose:
      - "3306"

volumes:
  db_data:
